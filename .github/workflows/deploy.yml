name: Deploy Backend

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          cat <<EOF > ~/.ssh/vockey.pem
          ${{ secrets.VOCKEY_PEM }}
          EOF
          chmod 600 ~/.ssh/vockey.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/vockey.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            cd /home/ubuntu/DealerGestor-Backend
            git pull origin main
          
            echo "spring.application.name=DealerGestor-Backend" > src/main/resources/application.properties
            echo "spring.datasource.url=jdbc:postgresql://dealergestor-company-mavimotos-db.c5aqw408mx3r.us-east-1.rds.amazonaws.com:5432/dealergestor_company_mavimotos_db" >> src/main/resources/application.properties
            echo "spring.datasource.driver-class-name=org.postgresql.Driver" >> src/main/resources/application.properties
            echo "spring.datasource.username=${{ secrets.DB_USERNAME }}" >> src/main/resources/application.properties
            echo "spring.datasource.password=${{ secrets.DB_PASSWORD }}" >> src/main/resources/application.properties
            echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties
            echo "spring.jpa.show-sql=true" >> src/main/resources/application.properties
            echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect" >> src/main/resources/application.properties
            echo "logging.level.org.springframework.security=DEBUG" >> src/main/resources/application.properties
            echo "logging.level.org.springframework.web=DEBUG" >> src/main/resources/application.properties
            echo "jwt.secret=${{ secrets.JWT_SECRET }}" >> src/main/resources/application.properties
            echo "jwt.expiration-ms=86400000" >> src/main/resources/application.properties
          
            ./gradlew build
            sudo docker-compose down
            sudo docker-compose up --build -d
          EOF